#!/bin/bash

APPDIR=$(dirname $(readlink -f "$0"))

source ${APPDIR}/lib/libapp
source ${APPDIR}/lib/libgtk

APP="Fsync"
APPUSAGE="${APPUSAGE} [-l|--local] localpath [-d|--destintaion] destinationpath --auto"

local=
dest=

function appargscustom {
    while [ $# -ne 0 ] ; do
        case "$1" in
            --local|-l)
                shift
                if [ -z "$1" ] ; then
                    apperror "Incomplete argument: --local|-l"
                fi
                local="$1"
                ;;
            --destination|-d)
                shift
                if [ -z "$1" ] ; then
                    apperror "Incomplete argument: --destination|-d"
                fi
                dest="$1"
                ;;
            --auto)
                local=$(pwd)
                dest=$(cat .fsync 2>/dev/null)
                ;;
            *)
                apperror "Invalid arguments: '$1'"
                ;;
        esac
        shift
    done
}

appargs "$@"

[ -z "${local}" ] && local=$(appgetdir "Select directory to sync")
[ -z "${local}" ] && apperror "Exit"
[ -e "${local}" ] || apperror "Local path '${local}' not exists"

[ -z "${dest}" ] && dest=$(appgetdir "Select destination directory")
[ -z "${dest}" ] && apperror "Exit"

# Sync via samba
mountdir=
if [[ "${dest}" =~ ^smb:// ]]
then
    option=
    [[ "${dest}" =~ ^smb://([^/]*)@(.*)$ ]] && option="username=${BASH_REMATCH[1]}," && dest="//${BASH_REMATCH[2]}"
    [[ "${option}" =~ ^(.*):(.*)$ ]] && option="${BASH_REMATCH[1]},password=${BASH_REMATCH[2]}"

    smbdest="${dest}"
    smbdestdir=$(dirname "${smbdest}")
    smbdestfile=$(basename "${smbdest}")
    mountdir=$(mktemp -d)
    dest="${mountdir}/${smbdestfile}"
    sudo mount -t cifs "${smbdestdir}" "${mountdir}" -o ${option}file_mode=0777,dir_mode=0777
fi

[ -e "${dest}" ] || apperror "Destination path '${dest}' not exists"

[ -d "${local}" ] && [[ ! "${local}" =~ .*\/$ ]] && local="${local}/"
[[ ! "${dest}" =~ .*\/$ ]] && dest="${dest}/"

rsynclocalopt=
rsyncdestopt=
[ -e "${local}excludes.local" ] && rsynclocalopt="--exclude-from=excludes.local"
[ -e "${dest}excludes.local" ] && rsyncdestopt="--exclude-from=excludes.local"

appinfo "Synchronization from '${local}' to '${dest}'"
appprogress "pulsate" "# Sync ${local} >> ${dest}" "0"
rsync -zur ${rsynclocalopt} --exclude=.fsync "${local}" "${dest}"
appprogress "100"

appinfo "Synchronization from '${dest}' to '${local}'"
appprogress "pulsate" "# Sync ${dest} >> ${local}" "0"
rsync -zur ${rsyncdestopt} --exclude=cifs784 "${dest}" "${local}"
appprogress "100"

[ ! -z "${mountdir}" ] && sudo umount "${mountdir}"

appnotify "Sync success"
